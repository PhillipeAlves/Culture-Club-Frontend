{"ast":null,"code":"var _jsxFileName = \"/Users/Phillipe/sei/code-alongs/cc-3-login/culture-club-app/frontend/src/components/login/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport Email from '../signup/Email';\nimport LoginPassword from './LoginPassword';\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"../../stores/UserStore\";\nimport \"./Login.css\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      buttonDisabled: false,\n      isToggleOn: true\n    };\n\n    this.handleToggle = () => {\n      this.setState(state => ({\n        isToggleOn: !state.isToggleOn\n      }));\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  async doLogin() {\n    if (!this.state.email) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch(\"login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      });\n      let result = await res.json(); // ===LOGIN SUCCESSFUL===\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.email = result.email;\n        console.log(UserStore.email); // ===LOGIN FAILED===\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false\n    });\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      buttonDisabled,\n      isToggleOn\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Log in\"), /*#__PURE__*/React.createElement(Email, {\n      name: \"email\",\n      email: email,\n      onChange: this.handleEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(LoginPassword, {\n      name: \"password\",\n      handleToggle: this.handleToggle,\n      isToggleOn: isToggleOn,\n      password: password,\n      onChange: this.handlePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      text: \"Login\",\n      disabled: buttonDisabled,\n      onClick: () => this.doLogin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/Phillipe/sei/code-alongs/cc-3-login/culture-club-app/frontend/src/components/login/LoginForm.js"],"names":["React","Component","Email","LoginPassword","SubmitButton","UserStore","LoginForm","state","email","password","buttonDisabled","isToggleOn","handleToggle","setState","handlePassword","e","target","value","handleEmail","handleSubmit","preventDefault","doLogin","res","fetch","method","headers","Accept","body","JSON","stringify","result","json","success","isLoggedIn","console","log","resetForm","alert","msg","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Email from '../signup/Email'\nimport LoginPassword from './LoginPassword'\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"../../stores/UserStore\";\nimport \"./Login.css\";\n\nclass LoginForm extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    buttonDisabled: false,\n    isToggleOn: true\n  }\n\n  handleToggle = () => {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  };\n  handlePassword = e => {\n    this.setState({\n      password: e.target.value\n    })\n  }\n  handleEmail = e => {\n    this.setState({\n      email: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n  }\n\n  async doLogin() {\n    if (!this.state.email) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n    try {\n      let res = await fetch(\"login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password,\n        }),\n      });\n\n      let result = await res.json();\n\n      // ===LOGIN SUCCESSFUL===\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.email = result.email;\n        console.log(UserStore.email)\n\n        // ===LOGIN FAILED===\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n\n  render() {\n    const { email, password, buttonDisabled, isToggleOn } = this.state\n    return (\n      <div className=\"login-form\">\n        <form onSubmit={this.handleSubmit}>\n          <h2>Log in</h2>\n          <Email name=\"email\" email={email} onChange={this.handleEmail} />\n          <LoginPassword name=\"password\" handleToggle={this.handleToggle} isToggleOn={isToggleOn} password={password} onChange={this.handlePassword} />\n          <SubmitButton\n            text=\"Login\"\n            disabled={buttonDisabled}\n            onClick={() => this.doLogin()}\n          />\n        </form>\n      </div >\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}