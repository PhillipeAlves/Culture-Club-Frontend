{"ast":null,"code":"var _jsxFileName = \"/Users/Phillipe/sei/code-alongs/culture_club/culture-club-app/src/components/login/LoginForm.js\";\nimport React, { Component } from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from '../../stores/UserStore';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 12) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Log in\", /*#__PURE__*/React.createElement(InputField, {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: this.state.username ? this.state.username : '',\n      onChange: val => this.setInputValue('username', val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputField, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password ? this.state.password : '',\n      onChange: val => this.setInputValue('password', val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      text: \"Login\",\n      disabled: this.state.buttonDisabled,\n      onClick: () => this.doLogin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/Phillipe/sei/code-alongs/culture_club/culture-club-app/src/components/login/LoginForm.js"],"names":["React","Component","InputField","SubmitButton","UserStore","LoginForm","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","length","setState","doLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedIn","resetForm","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from '../../stores/UserStore'\n\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            buttonDisabled: false\n        }\n    }\n\n    setInputValue(property, val) {\n        val = val.trim();\n        if (val.length > 12) {\n            return\n        }\n        this.setState({\n            [property]: val\n        })\n    }\n\n    async doLogin() {\n\n        if (!this.state.username) {\n            return\n        }\n        if (!this.state.password) {\n            return\n        }\n        this.setState({\n            buttonDisabled: true\n        })\n        try {\n\n            let res = await fetch('login', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            })\n\n            let result = await res.json();\n            if (result && result.success) {\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username\n            } else if (result && result.success === false) {\n                this.resetForm();\n                alert(result.msg)\n            }\n\n        }\n        catch (e) {\n            console.log(e);\n            this.resetForm()\n        }\n    }\n\n    resetForm() {\n        this.setState({\n            username: '',\n            password: '',\n            buttonDisabled: false\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"loginForm\">\n                Log in\n                <InputField\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={this.state.username ? this.state.username : ''}\n                    onChange={(val) => this.setInputValue('username', val)}\n                />\n                <InputField\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={this.state.password ? this.state.password : ''}\n                    onChange={(val) => this.setInputValue('password', val)}\n                />\n                <SubmitButton\n                    text=\"Login\"\n                    disabled={this.state.buttonDisabled}\n                    onClick={() => this.doLogin()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}