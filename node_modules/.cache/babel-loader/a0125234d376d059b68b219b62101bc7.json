{"ast":null,"code":"var _jsxFileName = \"/Users/Phillipe/sei/code-alongs/cc-3-login/culture-club-app/frontend/src/components/login/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport Email from '../signup/Email';\nimport LoginPassword from './LoginPassword';\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"../../stores/UserStore\";\nimport \"./Login.css\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggle = () => {\n      this.setState(state => ({\n        isToggleOn: !state.isToggleOn\n      }));\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      buttonDisabled: false,\n      isToggleOn: false\n    };\n  }\n\n  async doLogin() {\n    if (!this.state.email) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch(\"login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      });\n      let result = await res.json(); // ===LOGIN SUCCESSFUL===\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.email = result.email;\n        console.log(UserStore.email); // ===LOGIN FAILED===\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false\n    });\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      buttonDisabled,\n      isToggleOn\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Log in\"), /*#__PURE__*/React.createElement(Email, {\n      name: \"email\",\n      email: email,\n      onChange: this.handleEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(LoginPassword, {\n      name: \"password\",\n      handleToggle: this.handleToggle,\n      isToggleOn: isToggleOn,\n      password: password,\n      onChange: this.handlePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      text: \"Login\",\n      disabled: this.state.buttonDisabled,\n      onClick: () => this.doLogin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default LoginForm; // // import React, { Component } from \"react\";\n// import InputField from \"./InputField\";\n// import SubmitButton from \"./SubmitButton\";\n// import UserStore from \"../../stores/UserStore\";\n// import \"./Login.css\";\n// class LoginForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       username: \"\",\n//       password: \"\",\n//       buttonDisabled: false,\n//     };\n//   }\n//   setInputValue(property, val) {\n//     val = val.trim();\n//     if (val.length > 50) {\n//       return;\n//     }\n//     this.setState({\n//       [property]: val,\n//     });\n//   }\n//   async doLogin() {\n//     if (!this.state.username) {\n//       return;\n//     }\n//     if (!this.state.password) {\n//       return;\n//     }\n//     this.setState({\n//       buttonDisabled: true,\n//     });\n//     try {\n//       let res = await fetch(\"login\", {\n//         method: \"post\",\n//         headers: {\n//           Accept: \"application/json\",\n//           \"Content-type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           username: this.state.username,\n//           password: this.state.password,\n//         }),\n//       });\n//       let result = await res.json();\n//       if (result && result.success) {\n//         UserStore.isLoggedIn = true;\n//         UserStore.username = result.username;\n//       } else if (result && result.success === false) {\n//         this.resetForm();\n//         alert(result.msg);\n//       }\n//     } catch (e) {\n//       console.log(e);\n//       this.resetForm();\n//     }\n//   }\n//   resetForm() {\n//     this.setState({\n//       username: \"\",\n//       password: \"\",\n//       buttonDisabled: false,\n//     });\n//   }\n//   render() {\n//     return (\n//       <div className=\"loginForm\">\n//         Log in\n//         <InputField\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={this.state.username ? this.state.username : \"\"}\n//           onChange={(val) => this.setInputValue(\"username\", val)}\n//         />\n//         <InputField\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={this.state.password ? this.state.password : \"\"}\n//           onChange={(val) => this.setInputValue(\"password\", val)}\n//         />\n//         <SubmitButton\n//           text=\"Login\"\n//           disabled={this.state.buttonDisabled}\n//           onClick={() => this.doLogin()}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// export default LoginForm;","map":{"version":3,"sources":["/Users/Phillipe/sei/code-alongs/cc-3-login/culture-club-app/frontend/src/components/login/LoginForm.js"],"names":["React","Component","Email","LoginPassword","SubmitButton","UserStore","LoginForm","constructor","props","handleToggle","setState","state","isToggleOn","handlePassword","e","password","target","value","handleEmail","email","buttonDisabled","doLogin","res","fetch","method","headers","Accept","body","JSON","stringify","result","json","success","isLoggedIn","console","log","resetForm","alert","msg","render","handleSubmit"],"mappings":"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AAAe,MAAA,IAAI,EAAC,UAApB;AAA+B,MAAA,YAAY,EAAE,KAAKT,YAAlD;AAAgE,MAAA,UAAU,EAAEG,UAA5E;AAAwF,MAAA,QAAQ,EAAEG,QAAlG;AAA4G,MAAA,QAAQ,EAAE,KAAKF,cAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,YAAD;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWS,cAHvB;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKC,OAAL,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF;AAgBD;;AA/F+B;;AAkGlC,eAAef,SAAf,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport Email from '../signup/Email'\nimport LoginPassword from './LoginPassword'\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"../../stores/UserStore\";\nimport \"./Login.css\";\n\nclass LoginForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      buttonDisabled: false,\n      isToggleOn: false\n    }\n  }\n  handleToggle = () => {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  };\n  handlePassword = e => {\n    this.setState({\n      password: e.target.value\n    })\n  }\n  handleEmail = e => {\n    this.setState({\n      email: e.target.value\n    })\n  }\n\n  async doLogin() {\n    if (!this.state.email) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n    try {\n      let res = await fetch(\"login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password,\n        }),\n      });\n\n      let result = await res.json();\n\n      // ===LOGIN SUCCESSFUL===\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.email = result.email;\n        console.log(UserStore.email)\n\n        // ===LOGIN FAILED===\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n\n  render() {\n    const { email, password, buttonDisabled, isToggleOn } = this.state\n    return (\n      <div className=\"login-form\">\n        <form onSubmit={this.handleSubmit}>\n          <h2>Log in</h2>\n          <Email name=\"email\" email={email} onChange={this.handleEmail} />\n          <LoginPassword name=\"password\" handleToggle={this.handleToggle} isToggleOn={isToggleOn} password={password} onChange={this.handlePassword} />\n          <SubmitButton\n\n            text=\"Login\"\n            disabled={this.state.buttonDisabled}\n            onClick={() => this.doLogin()}\n          />\n          {/* <button className=\"login-btn\" disabled={buttonDisabled}>Login</button> */}\n        </form>\n      </div >\n    );\n  }\n}\n\nexport default LoginForm;\n\n\n// // import React, { Component } from \"react\";\n// import InputField from \"./InputField\";\n// import SubmitButton from \"./SubmitButton\";\n// import UserStore from \"../../stores/UserStore\";\n// import \"./Login.css\";\n\n// class LoginForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       username: \"\",\n//       password: \"\",\n//       buttonDisabled: false,\n//     };\n//   }\n\n//   setInputValue(property, val) {\n//     val = val.trim();\n//     if (val.length > 50) {\n//       return;\n//     }\n//     this.setState({\n//       [property]: val,\n//     });\n//   }\n\n//   async doLogin() {\n//     if (!this.state.username) {\n//       return;\n//     }\n//     if (!this.state.password) {\n//       return;\n//     }\n//     this.setState({\n//       buttonDisabled: true,\n//     });\n//     try {\n//       let res = await fetch(\"login\", {\n//         method: \"post\",\n//         headers: {\n//           Accept: \"application/json\",\n//           \"Content-type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           username: this.state.username,\n//           password: this.state.password,\n//         }),\n//       });\n\n//       let result = await res.json();\n//       if (result && result.success) {\n//         UserStore.isLoggedIn = true;\n//         UserStore.username = result.username;\n//       } else if (result && result.success === false) {\n//         this.resetForm();\n//         alert(result.msg);\n//       }\n//     } catch (e) {\n//       console.log(e);\n//       this.resetForm();\n//     }\n//   }\n\n//   resetForm() {\n//     this.setState({\n//       username: \"\",\n//       password: \"\",\n//       buttonDisabled: false,\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"loginForm\">\n//         Log in\n//         <InputField\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={this.state.username ? this.state.username : \"\"}\n//           onChange={(val) => this.setInputValue(\"username\", val)}\n//         />\n//         <InputField\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={this.state.password ? this.state.password : \"\"}\n//           onChange={(val) => this.setInputValue(\"password\", val)}\n//         />\n//         <SubmitButton\n//           text=\"Login\"\n//           disabled={this.state.buttonDisabled}\n//           onClick={() => this.doLogin()}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default LoginForm;\n"]},"metadata":{},"sourceType":"module"}