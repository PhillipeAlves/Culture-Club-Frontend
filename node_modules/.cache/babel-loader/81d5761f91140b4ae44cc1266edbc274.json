{"ast":null,"code":"var _jsxFileName = \"/Users/Phillipe/sei/code-alongs/cc-3-login/culture-club-app/frontend/src/components/events/Events.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Events.css\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\n\nclass Events extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // eventSession: false,\n      data: []\n    };\n\n    this.find_duplicate_in_array = array => {\n      var object = {};\n      var result = [];\n      array.forEach(function (item) {\n        if (!object[item]) object[item] = 0;\n        object[item] += 1;\n      });\n\n      for (var prop in object) {\n        if (object[prop] >= 2) {\n          result.push(prop);\n        }\n      }\n\n      return result;\n    };\n  }\n\n  //   async fetchData() {\n  //     try {\n  //       let res = await fetch(\"getEvents\", {\n  //         method: \"get\",\n  //       });\n  //       let result = await res.json();\n  //       this.setState({\n  //         data: [result._embedded.events, ...this.state.ingredients],\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //     }\n  //   }\n  async fetchData() {\n    axios.get(`https://app.ticketmaster.com/discovery/v2/events.json?city=melbourne&page=2&size=20&apikey=ARzROEpcmT85JLMu1NVGUCSSgS8LQDGd`).then(res => this.setState({\n      data: res.data._embedded.events\n    }));\n  } //   renderEvents = (e, idx) => {\n  //     console.log(e);\n  //     return (\n  //       <div key=\"idx\">\n  //         <img className=\"event-img\" src={e.images[1].url} alt=\"\" />\n  //         <p>{e.name}</p>\n  //         <p>{e._embedded.venues[0].name}</p>\n  //         <p>{e._embedded.venues[0].address.line1}</p>\n  //       </div>\n  //     );\n  //   };\n\n\n  render() {\n    const {\n      data\n    } = this.state;\n\n    if (data.length !== 0) {\n      let events = this.find_duplicate_in_array(data);\n      console.log(events);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"events\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, events.map(this.renderEvents)), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.fetchData(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"Check for Events\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.fetchData(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"Check for Events\"));\n    }\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/Users/Phillipe/sei/code-alongs/cc-3-login/culture-club-app/frontend/src/components/events/Events.js"],"names":["React","Component","axios","Route","NavLink","HashRouter","Events","state","data","find_duplicate_in_array","array","object","result","forEach","item","prop","push","fetchData","get","then","res","setState","_embedded","events","render","length","console","log","map","renderEvents"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,UAAzB,QAA2C,kBAA3C;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACN;AACAC,MAAAA,IAAI,EAAE;AAFA,KADqB;;AAAA,SAwC7BC,uBAxC6B,GAwCFC,KAAD,IAAW;AACnC,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,MAAM,GAAG,EAAb;AAEAF,MAAAA,KAAK,CAACG,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC5B,YAAI,CAACH,MAAM,CAACG,IAAD,CAAX,EAAmBH,MAAM,CAACG,IAAD,CAAN,GAAe,CAAf;AACnBH,QAAAA,MAAM,CAACG,IAAD,CAAN,IAAgB,CAAhB;AACD,OAHD;;AAKA,WAAK,IAAIC,IAAT,IAAiBJ,MAAjB,EAAyB;AACvB,YAAIA,MAAM,CAACI,IAAD,CAAN,IAAgB,CAApB,EAAuB;AACrBH,UAAAA,MAAM,CAACI,IAAP,CAAYD,IAAZ;AACD;AACF;;AAED,aAAOH,MAAP;AACD,KAxD4B;AAAA;;AAM7B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMK,SAAN,GAAkB;AAChBf,IAAAA,KAAK,CACFgB,GADH,CAEK,6HAFL,EAIGC,IAJH,CAISC,GAAD,IAAS,KAAKC,QAAL,CAAc;AAAEb,MAAAA,IAAI,EAAEY,GAAG,CAACZ,IAAJ,CAASc,SAAT,CAAmBC;AAA3B,KAAd,CAJjB;AAKD,GA3B4B,CA4B7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAoBAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA;AAAF,QAAW,KAAKD,KAAtB;;AACA,QAAIC,IAAI,CAACiB,MAAL,KAAgB,CAApB,EAAuB;AACrB,UAAIF,MAAM,GAAG,KAAKd,uBAAL,CAA6BD,IAA7B,CAAb;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAS,QAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BA,MAAM,CAACK,GAAP,CAAW,KAAKC,YAAhB,CAA7B,CAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKZ,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,CADF;AAOD,KAVD,MAUO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKA,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF;AAMD;AACF;;AA9E4B;;AAiF/B,eAAeX,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Events.css\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\n\nclass Events extends Component {\n  state = {\n    // eventSession: false,\n    data: [],\n  };\n\n  //   async fetchData() {\n  //     try {\n  //       let res = await fetch(\"getEvents\", {\n  //         method: \"get\",\n  //       });\n\n  //       let result = await res.json();\n  //       this.setState({\n  //         data: [result._embedded.events, ...this.state.ingredients],\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //     }\n  //   }\n\n  async fetchData() {\n    axios\n      .get(\n        `https://app.ticketmaster.com/discovery/v2/events.json?city=melbourne&page=2&size=20&apikey=ARzROEpcmT85JLMu1NVGUCSSgS8LQDGd`\n      )\n      .then((res) => this.setState({ data: res.data._embedded.events }));\n  }\n  //   renderEvents = (e, idx) => {\n  //     console.log(e);\n  //     return (\n  //       <div key=\"idx\">\n  //         <img className=\"event-img\" src={e.images[1].url} alt=\"\" />\n  //         <p>{e.name}</p>\n  //         <p>{e._embedded.venues[0].name}</p>\n  //         <p>{e._embedded.venues[0].address.line1}</p>\n  //       </div>\n  //     );\n  //   };\n\n  find_duplicate_in_array = (array) => {\n    var object = {};\n    var result = [];\n\n    array.forEach(function (item) {\n      if (!object[item]) object[item] = 0;\n      object[item] += 1;\n    });\n\n    for (var prop in object) {\n      if (object[prop] >= 2) {\n        result.push(prop);\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    const { data } = this.state;\n    if (data.length !== 0) {\n      let events = this.find_duplicate_in_array(data);\n      console.log(events);\n      return (\n        <div>\n          <h2>Events</h2>\n          <section className=\"events\">{events.map(this.renderEvents)}</section>\n          <button onClick={() => this.fetchData()}>Check for Events</button>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2>Events</h2>\n          <button onClick={() => this.fetchData()}>Check for Events</button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Events;\n"]},"metadata":{},"sourceType":"module"}