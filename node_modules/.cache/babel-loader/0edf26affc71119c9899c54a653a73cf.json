{"ast":null,"code":"// import React from 'react';\nconst checkPassword = password => {\n  if (password.length > 0) {\n    let passwordInformation = {\n      score: 0,\n      hasLowerCase: false,\n      hasUpperCase: false,\n      hasNumber: false,\n      hasNonAlphaNumeric: false,\n      isOver8Char: false,\n      isOver12Char: false\n    };\n    let chars = password.split('');\n    chars.forEach(char => {\n      if (/\\d/.test(char)) {\n        passwordInformation.hasNumber = true;\n      }\n\n      if (/[a-z]/.test(char)) {\n        passwordInformation.hasLowerCase = true;\n      }\n\n      if (/[A-Z]/.test(char)) {\n        passwordInformation.hasUpperCase = true;\n      }\n\n      if (/[^a-zA-Z0-9]/.test(char)) {\n        passwordInformation.hasNonAlphaNumeric = true;\n      }\n\n      if (chars.length > 8) {\n        passwordInformation.isOver8Char = true;\n      }\n\n      if (chars.length > 12) {\n        passwordInformation.isOver12Char = true;\n      }\n    });\n\n    for (const property in passwordInformation) {\n      if (passwordInformation[property] === true) {\n        passwordInformation.score += 1;\n      }\n    }\n\n    if (passwordInformation.score < 3) {\n      return \"weak\";\n    } else if (passwordInformation.score < 5) {\n      return \"medium\";\n    } else {\n      return \"strong\";\n    }\n  }\n};\n\nexport default checkPassword;","map":{"version":3,"sources":["/Users/Phillipe/sei/code-alongs/culture_club/culture-club-app/src/components/signup/checkPassword.js"],"names":["checkPassword","password","length","passwordInformation","score","hasLowerCase","hasUpperCase","hasNumber","hasNonAlphaNumeric","isOver8Char","isOver12Char","chars","split","forEach","char","test","property"],"mappings":"AAAA;AAEA,MAAMA,aAAa,GAAGC,QAAQ,IAAI;AAE9B,MAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;AACrB,QAAIC,mBAAmB,GAAG;AACtBC,MAAAA,KAAK,EAAE,CADe;AAEtBC,MAAAA,YAAY,EAAE,KAFQ;AAGtBC,MAAAA,YAAY,EAAE,KAHQ;AAItBC,MAAAA,SAAS,EAAE,KAJW;AAKtBC,MAAAA,kBAAkB,EAAE,KALE;AAMtBC,MAAAA,WAAW,EAAE,KANS;AAOtBC,MAAAA,YAAY,EAAE;AAPQ,KAA1B;AAUA,QAAIC,KAAK,GAAGV,QAAQ,CAACW,KAAT,CAAe,EAAf,CAAZ;AAEAD,IAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;AAClB,UAAI,KAAKC,IAAL,CAAUD,IAAV,CAAJ,EAAqB;AACjBX,QAAAA,mBAAmB,CAACI,SAApB,GAAgC,IAAhC;AACH;;AACD,UAAI,QAAQQ,IAAR,CAAaD,IAAb,CAAJ,EAAwB;AACpBX,QAAAA,mBAAmB,CAACE,YAApB,GAAmC,IAAnC;AACH;;AACD,UAAI,QAAQU,IAAR,CAAaD,IAAb,CAAJ,EAAwB;AACpBX,QAAAA,mBAAmB,CAACG,YAApB,GAAmC,IAAnC;AACH;;AACD,UAAI,eAAeS,IAAf,CAAoBD,IAApB,CAAJ,EAA+B;AAC3BX,QAAAA,mBAAmB,CAACK,kBAApB,GAAyC,IAAzC;AACH;;AACD,UAAIG,KAAK,CAACT,MAAN,GAAe,CAAnB,EAAsB;AAClBC,QAAAA,mBAAmB,CAACM,WAApB,GAAkC,IAAlC;AACH;;AACD,UAAIE,KAAK,CAACT,MAAN,GAAe,EAAnB,EAAuB;AACnBC,QAAAA,mBAAmB,CAACO,YAApB,GAAmC,IAAnC;AACH;AACJ,KAnBD;;AAqBA,SAAK,MAAMM,QAAX,IAAuBb,mBAAvB,EAA4C;AACxC,UAAIA,mBAAmB,CAACa,QAAD,CAAnB,KAAkC,IAAtC,EAA4C;AACxCb,QAAAA,mBAAmB,CAACC,KAApB,IAA6B,CAA7B;AACH;AACJ;;AAED,QAAID,mBAAmB,CAACC,KAApB,GAA4B,CAAhC,EAAmC;AAC/B,aAAO,MAAP;AACH,KAFD,MAEO,IAAID,mBAAmB,CAACC,KAApB,GAA4B,CAAhC,EAAmC;AACtC,aAAO,QAAP;AACH,KAFM,MAEA;AACH,aAAO,QAAP;AACH;AACJ;AAEJ,CAnDD;;AAqDA,eAAeJ,aAAf","sourcesContent":["// import React from 'react';\n\nconst checkPassword = password => {\n\n    if (password.length > 0) {\n        let passwordInformation = {\n            score: 0,\n            hasLowerCase: false,\n            hasUpperCase: false,\n            hasNumber: false,\n            hasNonAlphaNumeric: false,\n            isOver8Char: false,\n            isOver12Char: false\n        }\n\n        let chars = password.split('')\n\n        chars.forEach(char => {\n            if (/\\d/.test(char)) {\n                passwordInformation.hasNumber = true\n            }\n            if (/[a-z]/.test(char)) {\n                passwordInformation.hasLowerCase = true\n            }\n            if (/[A-Z]/.test(char)) {\n                passwordInformation.hasUpperCase = true\n            }\n            if (/[^a-zA-Z0-9]/.test(char)) {\n                passwordInformation.hasNonAlphaNumeric = true\n            }\n            if (chars.length > 8) {\n                passwordInformation.isOver8Char = true\n            }\n            if (chars.length > 12) {\n                passwordInformation.isOver12Char = true\n            }\n        })\n\n        for (const property in passwordInformation) {\n            if (passwordInformation[property] === true) {\n                passwordInformation.score += 1\n            }\n        }\n\n        if (passwordInformation.score < 3) {\n            return \"weak\"\n        } else if (passwordInformation.score < 5) {\n            return \"medium\"\n        } else {\n            return \"strong\"\n        }\n    }\n\n}\n\nexport default checkPassword\n"]},"metadata":{},"sourceType":"module"}