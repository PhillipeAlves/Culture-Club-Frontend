{"ast":null,"code":"var _jsxFileName = \"/Users/Phillipe/sei/code-alongs/cc-3-login/culture-club-app/frontend/src/components/login/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport Email from '../signup/Email';\nimport LoginPassword from './LoginPassword';\nimport InputField from \"./InputField\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"../../stores/UserStore\";\nimport \"./Login.css\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      buttonDisabled: false,\n      isToggleOn: true\n    };\n\n    this.handleToggle = () => {\n      this.setState(state => ({\n        isToggleOn: !state.isToggleOn\n      }));\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.setInputValue = (property, val) => {\n      val = val.trim();\n\n      if (val.length > 50) {\n        return;\n      }\n\n      this.setState({\n        [property]: val\n      });\n    };\n  }\n\n  async doLogin() {\n    if (!this.state.email) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch(\"login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.email = result.email;\n        console.log(UserStore.email);\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false\n    });\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      buttonDisabled,\n      isToggleOn\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, \"Log in\", /*#__PURE__*/React.createElement(Email, {\n      value: this.state.email ? this.state.email : \"\",\n      name: \"email\",\n      email: email,\n      onChange: this.handleEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LoginPassword, {\n      name: \"password\",\n      handleToggle: this.handleToggle,\n      isToggleOn: isToggleOn,\n      password: password,\n      onChange: this.handlePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      text: \"Login\",\n      disabled: this.state.buttonDisabled,\n      onClick: () => this.doLogin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/Phillipe/sei/code-alongs/cc-3-login/culture-club-app/frontend/src/components/login/LoginForm.js"],"names":["React","Component","Email","LoginPassword","InputField","SubmitButton","UserStore","LoginForm","state","email","password","buttonDisabled","isToggleOn","handleToggle","setState","handleEmail","e","target","value","setInputValue","property","val","trim","length","doLogin","res","fetch","method","headers","Accept","body","JSON","stringify","result","json","success","isLoggedIn","console","log","resetForm","alert","msg","render","handlePassword"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Email from '../signup/Email'\nimport LoginPassword from './LoginPassword'\nimport InputField from \"./InputField\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"../../stores/UserStore\";\nimport \"./Login.css\";\n\nclass LoginForm extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    buttonDisabled: false,\n    isToggleOn: true\n  }\n\n  handleToggle = () => {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  };\n  // handlePassword = e => {\n  //   this.setState({\n  //     password: e.target.value\n  //   })\n  // }\n  handleEmail = e => {\n    this.setState({\n      email: e.target.value\n    })\n  }\n  // handleSubmit = (e) => {\n  //   e.preventDefault()\n  // }\n\n\n  setInputValue = (property, val) => {\n    val = val.trim();\n    if (val.length > 50) {\n      return;\n    }\n    this.setState({\n      [property]: val,\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.email) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n    try {\n      let res = await fetch(\"login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password,\n        }),\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.email = result.email;\n        console.log(UserStore.email)\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n\n  render() {\n    const { email, password, buttonDisabled, isToggleOn } = this.state\n    return (\n      <div className=\"loginForm\">\n        Log in\n        <Email value={this.state.email ? this.state.email : \"\"} name=\"email\" email={email} onChange={this.handleEmail} />\n        <LoginPassword name=\"password\" handleToggle={this.handleToggle} isToggleOn={isToggleOn} password={password} onChange={this.handlePassword} />\n        {/* <InputField\n          type=\"text\"\n          placeholder=\"Email\"\n          value={this.state.email ? this.state.email : \"\"}\n          onChange={(val) => this.setInputValue(\"email\", val)}\n        /> */}\n\n        {/* <InputField\n          type=\"password\"\n          placeholder=\"Password\"\n          value={this.state.password ? this.state.password : \"\"}\n          onChange={(val) => this.setInputValue(\"password\", val)}\n        /> */}\n        <SubmitButton\n          text=\"Login\"\n          disabled={this.state.buttonDisabled}\n          onClick={() => this.doLogin()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}