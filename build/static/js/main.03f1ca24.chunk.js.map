{"version":3,"sources":["stores/UserStore.js","components/signup/Email.js","components/login/LoginPassword.js","components/login/SubmitButton.js","components/Profile/Profile.js","components/login/Login.js","components/signup/checkPassword.js","components/signup/Password.js","components/signup/SubmitButton.js","components/signup/Signup.js","components/LogoutButton.js","components/events/Events.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["extendObservable","this","isLoggedIn","username","userID","Email","props","className","onChange","value","email","placeholder","type","test","Password","password","autoComplete","isToggleOn","onClick","handleToggle","SubmitButton","state","disabled","Component","Profile","name","location","time","invitation","handleInputChange","event","target","setState","onSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","status","confirmMessage","style","background","required","Login","handlePassword","e","handleEmail","handleLogin","buttonDisabled","axios","post","data","success","UserStore","resetForm","alert","msg","catch","error","console","log","LoginPassword","checkPassword","length","passwordInformation","score","hasLowerCase","hasUpperCase","hasNumber","hasNonAlphaNumeric","isOver8Char","isOver12Char","chars","split","property","forEach","char","Signup","handleUsername","Accept","json","result","id","handleSignUp","LogoutButton","Events","page","totalPages","renderEvents","idx","key","href","url","src","images","alt","convertDate","dates","start","localDate","convertTime","localTime","_embedded","venues","h","slice","m","date","newDate","Date","dayOfTheWeek","toDateString","dayAndMonth","join","year","getUnique","array","map","i","final","indexOf","filter","getNextPage","count","getNewEvents","getPreviousPage","get","events","Home","App","doLogout","to","exact","path","component","SignUp","observer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.03f1ca24.chunk.js","sourcesContent":["import { extendObservable } from \"mobx\";\n\nclass UserStore {\n  constructor() {\n    extendObservable(this, {\n      isLoggedIn: false,\n      username: \"\",\n      userID: \"\",\n    });\n  }\n}\n\nexport default new UserStore();\n","import React from \"react\";\nimport \"./Email.css\";\n\nfunction Email(props) {\n  return (\n    <div className=\"email-container\">\n      <input\n        onChange={props.onChange}\n        value={props.email}\n        placeholder=\"email\"\n        type=\"email\"\n      />\n      {props.email !== \"\" ? (\n        isValidEmail(props.email)\n      ) : (\n        <p className=\"valid-placeholder\">email</p>\n      )}\n    </div>\n  );\n}\n\nfunction isValidEmail(email) {\n  const validEmail = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n  if (validEmail.test(email)) {\n    return (\n      <p className=\"valid\">\n        <i className=\"fas fa-check\"></i>\n      </p>\n    );\n  } else {\n    return <p className=\"required\">Please enter a valid email.</p>;\n  }\n}\n\nexport default Email;\n","import React from 'react';\nimport '../signup/Password.css'\n\nfunction Password(props) {\n    return (\n        <div className=\"password-container\">\n            <input\n                value={props.password}\n                onChange={props.onChange}\n                autoComplete=\"new-password\"\n                placeholder=\"Password\"\n                type=\n                {\n                    `${props.isToggleOn\n                        ? \"text\"\n                        : \"password\"}`\n                }\n            />\n            <i\n                onClick={props.handleToggle}\n                className=\n                {\n                    `fas ${props.isToggleOn\n                        ? \"fa-eye-slash\"\n                        : \"fa-eye\"}`\n                }>\n            </i>\n        </div>\n    );\n}\n\n\nexport default Password;\n","import React, { Component } from 'react';\n\nclass SubmitButton extends Component {\n    state = {}\n    render() {\n        return (\n            <div>\n                <button\n                    className=\"login-btn\"\n                    disabled={this.props.disabled}\n                    onClick={() => this.props.onClick()}\n                >\n                    Log in\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default SubmitButton;","import React, { Component } from \"react\";\nimport UserStore from \"../../stores/UserStore\";\nimport \"./Profile.css\";\nimport { Route, Link, HashRouter } from \"react-router-dom\";\n\nclass Profile extends Component {\n  state = {\n    email: \"\",\n    name: \"\",\n    location: \"\",\n    time: \"\",\n    invitation: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({\n      invitation: \"Create an invition\",\n    });\n  }\n\n  handleInputChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    fetch(\"/sendEmail\", {\n      method: \"post\",\n      body: JSON.stringify(this.state),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      if (res.status) {\n        this.confirmMessage();\n      }\n    });\n  };\n\n  confirmMessage() {\n    this.setState({\n      email: \"\",\n      name: \"\",\n      location: \"\",\n      time: \"\",\n      invitation: \"The invitation has been sent\",\n    });\n  }\n\n  render() {\n    const { email, name, location, time, invitation } = this.state;\n    const handleInputChange = this.handleInputChange;\n    const divStyle = {\n      background: `linear-gradient(\n        rgba(0, 0, 0, 0.669),\n        rgba(0, 0, 0, 0.101)\n      ),\n        url(\"https://images.unsplash.com/photo-1516575334481-f85287c2c82d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\")`,\n    };\n    return (\n      <HashRouter>\n        <div className=\"profile-container\">\n          <div className=\"profile-card\">\n            {/* <img\n                className=\"profile-picture-card\"\n                src=\"https://images.unsplash.com/photo-1516575334481-f85287c2c82d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\"\n                alt=\"\"\n              /> */}\n            <div className=\"profile-picture-bg\" style={divStyle}>\n              <h1>SARAH ENGLISH</h1>\n            </div>\n\n            <form className=\"create-event-form\" onSubmit={this.onSubmit}>\n              <h3>{invitation}</h3>\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={email}\n                onChange={handleInputChange}\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"name\"\n                value={name}\n                onChange={handleInputChange}\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"location\"\n                placeholder=\"location\"\n                value={location}\n                onChange={handleInputChange}\n                required\n              />\n              <input\n                className=\"time\"\n                type=\"time\"\n                name=\"time\"\n                placeholder=\"Enter time\"\n                value={time}\n                onChange={handleInputChange}\n                required\n              />\n              <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />\n            </form>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Email from \"../signup/Email\";\nimport LoginPassword from \"./LoginPassword\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"../../stores/UserStore\";\nimport Profile from \"../Profile/Profile\";\nimport \"./Login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false,\n      isToggleOn: false,\n    };\n  }\n  handleToggle = () => {\n    this.setState((state) => ({\n      isToggleOn: !state.isToggleOn,\n    }));\n  };\n  handlePassword = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n  handleEmail = (e) => {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n\n  handleLogin = (e) => {\n    if (!this.state.email) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n    axios\n      .post(\"/login\", {\n        email: this.state.email,\n        password: this.state.password,\n      })\n      .then((res) => {\n        if (res.data.success) {\n          UserStore.isLoggedIn = true;\n          UserStore.userID = res.userID;\n          UserStore.username = res.username;\n        } else {\n          this.resetForm();\n          alert(res.msg);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  resetForm() {\n    this.setState({\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n\n  render() {\n    const { email, password, buttonDisabled, isToggleOn } = this.state;\n    if (UserStore.isLoggedIn) {\n      return (\n        <div>\n          <Profile />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"login-container\">\n          <div className=\"login-form\">\n            <form>\n              <h2>Log in</h2>\n              <Email name=\"email\" email={email} onChange={this.handleEmail} />\n              <LoginPassword\n                name=\"password\"\n                handleToggle={this.handleToggle}\n                isToggleOn={isToggleOn}\n                password={password}\n                onChange={this.handlePassword}\n              />\n              <SubmitButton\n                disabled={buttonDisabled}\n                onClick={() => this.handleLogin()}\n              />\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport \"./Signup.css\"\n\nconst checkPassword = password => {\n\n    if (password.length > 0) {\n        let passwordInformation = {\n            score: 0,\n            hasLowerCase: false,\n            hasUpperCase: false,\n            hasNumber: false,\n            hasNonAlphaNumeric: false,\n            isOver8Char: false,\n            isOver12Char: false\n        }\n\n        let chars = password.split('')\n\n        chars.forEach(char => {\n            if (/\\d/.test(char)) {\n                passwordInformation.hasNumber = true\n            }\n            if (/[a-z]/.test(char)) {\n                passwordInformation.hasLowerCase = true\n            }\n            if (/[A-Z]/.test(char)) {\n                passwordInformation.hasUpperCase = true\n            }\n            if (/[^a-zA-Z0-9]/.test(char)) {\n                passwordInformation.hasNonAlphaNumeric = true\n            }\n            if (chars.length > 8) {\n                passwordInformation.isOver8Char = true\n            }\n            if (chars.length > 12) {\n                passwordInformation.isOver12Char = true\n            }\n        })\n\n        for (const property in passwordInformation) {\n            if (passwordInformation[property] === true) {\n                passwordInformation.score += 1\n            }\n        }\n\n        if (passwordInformation.score <= 5) {\n            return <p className={`password-strength required`}>Use 8 or more characters with a mix of letters, numbers & symbols.</p>\n        } else {\n            return <p className=\"password-strength valid\"><i className=\"fas fa-check\"></i></p>\n        }\n    }\n\n}\n\nexport default checkPassword\n","import React from 'react';\nimport checkPassword from './checkPassword'\nimport './Password.css'\n\nfunction Password(props) {\n    return (\n        <div className=\"password-container\">\n            <input\n                value={props.password}\n                onChange={props.onChange}\n                autoComplete=\"new-password\"\n                placeholder=\"Password\"\n                type=\n                {\n                    `${props.isToggleOn\n                        ? \"text\"\n                        : \"password\"}`\n                }\n            />\n            <i\n                onClick={props.handleToggle}\n                className=\n                {\n                    `fas ${props.isToggleOn\n                        ? \"fa-eye-slash\"\n                        : \"fa-eye\"}`\n                }>\n            </i>\n\n            {props.password !== '' ? checkPassword(props.password) : <p className='valid-placeholder'>password</p>}\n        </div>\n    );\n}\n\n\nexport default Password;\n\n\n","import React, { Component } from 'react';\n\nclass SubmitButton extends Component {\n    state = {}\n    render() {\n        return (\n            <div>\n                <button\n                    className=\"signup-btn\"\n                    disabled={this.props.disabled}\n                    onClick={() => this.props.onClick()}\n                >\n                    Sign up\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default SubmitButton;","import React, { Component } from \"react\";\nimport Password from \"./Password\";\nimport Email from \"./Email\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"../../stores/UserStore\";\nimport \"./Signup.css\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false,\n      isToggleOn: false,\n    };\n  }\n  handleToggle = () => {\n    this.setState((state) => ({\n      isToggleOn: !state.isToggleOn,\n    }));\n  };\n  handlePassword = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n  handleUsername = (e) => {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n  handleEmail = (e) => {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n  async handleSignUp() {\n    if (!this.state.username) {\n      return;\n    }\n    if (!this.state.email) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n    try {\n      let res = await fetch(\"/signup\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          email: this.state.email,\n          password: this.state.password,\n        }),\n      });\n\n      let result = await res.json();\n\n      // ===SIGN UP SUCCESSFUL===\n      if (result && result.success) {\n        console.log(result.username);\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n        UserStore.userID = result.userID;\n\n        // ===SIGN UP FAILED===\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n  render() {\n    const {\n      username,\n      email,\n      password,\n      buttonDisabled,\n      isToggleOn,\n    } = this.state;\n    return (\n      <div className=\"sign-up-container\">\n        <div className=\"sign-up-form\">\n          <form>\n            <h2>Sign up</h2>\n            <input\n              className=\"user-name\"\n              name=\"username\"\n              onChange={this.handleUsername}\n              type=\"text\"\n              id=\"\"\n              placeholder=\"First name\"\n            />\n            <Email name=\"email\" email={email} onChange={this.handleEmail} />\n            <Password\n              name=\"password\"\n              handleToggle={this.handleToggle}\n              isToggleOn={isToggleOn}\n              password={password}\n              onChange={this.handlePassword}\n            />\n            <SubmitButton\n              disabled={buttonDisabled}\n              onClick={() => this.handleSignUp()}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\n\nclass LogoutButton extends Component {\n  render() {\n    return (\n      <div>\n        <button\n          className=\"session-btns logout-session-btn\"\n          disabled={this.props.disabled}\n          onClick={() => this.props.onClick()}\n        >\n          Log out\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default LogoutButton;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Events.css\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\n\nclass Events extends Component {\n  state = {\n    page: 0,\n    totalPages: 0,\n    data: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(`http://localhost:8888/getEvents?page=${this.state.page}`)\n      .then((res) =>\n        this.setState({\n          data: this.getUnique(res.data._embedded.events, \"name\"),\n          totalPages: res.data.page.totalPages,\n        })\n      );\n  }\n\n  renderEvents = (e, idx) => {\n    return (\n      <div className=\"event\" key={idx}>\n        <div className=\"container-event-img\">\n          <a href={e.url}>\n            <img className=\"event-img\" src={e.images[0].url} alt=\"\" />\n          </a>\n        </div>\n        <div className=\"event-info\">\n          <p className=\"date-format\">\n            {`${this.convertDate(e.dates.start.localDate)} ${this.convertTime(\n              e.dates.start.localTime\n            )}`}\n          </p>\n          <h3>{e.name}</h3>\n          <p>{e._embedded.venues[0].name}</p>\n        </div>\n      </div>\n    );\n  };\n\n  convertTime = (time) => {\n    let h = time.slice(0, 2);\n    let m = time.slice(3, 5);\n    let newTime = h > 12 ? h - 12 + \":\" + m + \" PM\" : h + \":\" + m + \" AM\";\n    return newTime;\n  };\n\n  convertDate = (date) => {\n    let newDate = new Date(date);\n    let dayOfTheWeek = newDate.toDateString().split(\" \").slice(0, 1);\n    let dayAndMonth = newDate.toDateString().split(\" \").slice(1, 3).join(\" \");\n    let year = newDate.toDateString().split(\" \").slice(-1);\n    return `${dayOfTheWeek}, ${dayAndMonth}, ${year}`;\n  };\n\n  getUnique = (array, name) => {\n    const unique = array\n      .map((e) => e[name])\n      .map((e, i, final) => final.indexOf(e) === i && i)\n      .filter((e) => array[e])\n      .map((e) => array[e]);\n    return unique;\n  };\n\n  getNextPage = () => {\n    if (this.state.page < this.state.totalPages) {\n      let count = this.state.page + 1;\n      this.setState({\n        page: count,\n      });\n      this.getNewEvents();\n    } else {\n      return;\n    }\n  };\n\n  getPreviousPage = () => {\n    if (this.state.page > 0) {\n      let count = this.state.page - 1;\n      this.setState({\n        page: count,\n      });\n      this.getNewEvents();\n    } else {\n      return;\n    }\n  };\n\n  getNewEvents = () => {\n    axios\n      .get(`http://localhost:8888/getEvents?page=${this.state.page}`)\n      .then((res) => {\n        this.setState({\n          data: this.getUnique(res.data._embedded.events, \"name\"),\n        });\n      });\n  };\n\n  render() {\n    const { data } = this.state;\n    if (data.length !== 0) {\n      return (\n        <div>\n          <h2 className=\"whatsup\">\n            what's <span className=\"up\">up!</span>\n          </h2>\n          <div className=\"events\">\n            <div className=\"events-banner\">\n              <section>{data.map(this.renderEvents)}</section>\n              <h2>Events</h2>\n              <button\n                className=\"roll-pages\"\n                onClick={() => this.getPreviousPage()}\n              >\n                -\n              </button>\n              <button className=\"roll-pages\" onClick={() => this.getNextPage()}>\n                +\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2>Events</h2>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Events;\n","import React, { Component } from \"react\";\nimport Events from \"./events/Events\";\nimport \"./Home.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"home\">\n          <div className=\"container\">\n            <div className=\"home-banner-container\">\n              <h2>CATCH UP</h2>\n              <h2>AND STAY CONNECTED</h2>\n              <p>\n                Catch up with friends... Cras facilisis urna ornare ex volutpat,\n                et convallis erat elementum. Ut aliquam, ipsum vitae gravida\n                suscipit, metus dui bibendum est, eget rhoncus nibh metus nec\n              </p>\n              <div className=\"home-banner-wrapper\">\n                <div className=\"home-banner\">\n                  <h1>CULTURE CLUB</h1>\n                </div>\n                <p className=\"home-banner-text\">\n                  Catch up with friends... Cras facilisis urna ornare ex\n                  volutpat, et convallis erat elementum. Ut aliquam, ipsum vitae\n                  gravida suscipit, metus dui bibendum est,\n                </p>\n              </div>\n            </div>\n            <p className=\"banner-description\">\n              Catch up with friends... Cras facilisis urna ornare ex volutpat,\n              et convallis erat elementum. Ut aliquam, ipsum vitae gravida\n              suscipit, metus dui bibendum est, eget rhoncus nibh metus nec\n              massa. Maecenas hendrerit laoreet augue nec molestie. Cum sociis\n              natoque penatibus et magnis dis parturient montes, nascetur\n              ridiculus mus.\n            </p>\n            <Events />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { observer } from \"mobx-react\";\nimport UserStore from \"./stores/UserStore\";\nimport Login from \"./components/login/Login\";\nimport SignUp from \"./components/signup/Signup\";\nimport Profile from \"./components/Profile/Profile\";\nimport LogoutButton from \"./components/LogoutButton\";\nimport Home from \"./components/Home\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // === CHECK FOR SESSION ===\n\n  componentDidMount() {\n    let config = {\n      method: \"post\",\n      url: \"/isLoggedIn\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    axios(config)\n      .then((res) => {\n        res = res.data;\n        if (res && res.success) {\n          UserStore.isLoggedIn = true;\n          UserStore.userID = res.userID;\n          UserStore.username = res.username;\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // ===DESTROY SESSION===\n\n  doLogout() {\n    let config = {\n      method: \"post\",\n      url: \"/logout\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    axios(config)\n      .then((res) => {\n        res = res.data;\n        if (res && res.success) {\n          UserStore.isLoggedIn = false;\n          UserStore.userID = \"\";\n          UserStore.username = \"\";\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  render() {\n    // === USER IS LOGGED IN===\n\n    if (UserStore.isLoggedIn) {\n      return (\n        <HashRouter>\n          <div className=\"App\">\n            <div>\n              <nav className=\"nav-bar\">\n                <div className=\"logo-container\">\n                  <span>C</span>\n                  <h1 className=\"site-name\">ulture club</h1>\n                </div>\n                <ul className=\"menu\">\n                  <LogoutButton onClick={() => this.doLogout()} />\n                  <span className=\"menu-division\">|</span>\n                  <li>\n                    <NavLink\n                      className=\"session-btns signup-session-btn\"\n                      to=\"/profile\"\n                    >\n                      profile\n                    </NavLink>\n                  </li>\n                  <NavLink\n                    className=\"home-session-btn hvr-radial-out\"\n                    exact\n                    to=\"/\"\n                  >\n                    <i className=\"fas fa-bars\"></i>\n                  </NavLink>\n                </ul>\n              </nav>\n              <div className=\"content\">\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/profile\" component={Profile} />\n              </div>\n            </div>\n          </div>\n        </HashRouter>\n      );\n\n      // === USER IS NOT LOGGED IN===\n    } else {\n      return (\n        <HashRouter>\n          <div className=\"App\">\n            <div>\n              <nav className=\"nav-bar\">\n                <div className=\"logo-container\">\n                  <span>C</span>\n                  <h1 className=\"site-name\">ulture lub</h1>\n                </div>\n                <ul className=\"menu\">\n                  <li>\n                    <NavLink\n                      className=\"session-btns login-session-btn\"\n                      to=\"/login\"\n                    >\n                      login\n                    </NavLink>\n                  </li>\n                  <span className=\"menu-division\">|</span>\n                  <li>\n                    <NavLink\n                      className=\"session-btns signup-session-btn\"\n                      to=\"/signup\"\n                    >\n                      signup\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink\n                      className=\"home-session-btn hvr-radial-out\"\n                      exact\n                      to=\"/\"\n                    >\n                      <i className=\"fas fa-bars\"></i>\n                    </NavLink>\n                  </li>\n                </ul>\n              </nav>\n              <div className=\"content\">\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/signup\" component={SignUp} />\n                <Route path=\"/logout\" component={Login} />\n                <Route path=\"/profile\" component={Login} />\n              </div>\n            </div>\n          </div>\n        </HashRouter>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}